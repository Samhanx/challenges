{
  "name": "Front End Libraries Projects",
  "order": 8,
  "time": "150 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "bd7158d8c442eddfaeb5bd13",
      "title": "实现一个随机引语生成器",
      "description": [
        "<strong>目标:</strong> 在 <a href='https://codepen.io' target='_blank'>CodePen.io</a> 上实现一个功能类似 <a href='https://codepen.io/freeCodeCamp/full/qRZeGZ' target='_blank'>https://codepen.io/freeCodeCamp/full/qRZeGZ</a> 的 App。",
        "实现以下 <a href='https://en.wikipedia.org/wiki/User_story' target='_blank'>用户故事</a> 并且通过所有的测试。 可以打造你自己的独特样式。",
        "使用诸如 HTML, JavaScript, CSS, Bootstrap, SASS, React, Redux, 以及 jQuery 这些技术来完成项目。 鉴于本部分内容和前端框架学习相关，你应该使用一款前端框架（比如 React）。 并不推荐使用前面没有提到的技术，否则风险自负。 我们有计划新增其他前端框架课程，比如 Angular 和 Vue，不过目前还没有这些内容。 如果在本项目中使用以上推荐技术遇到任何问题，欢迎反馈给我们。 编码愉快！",
        "<strong>用户故事 #1：</strong> 我能看到一个具有 <code>id=\"quote-box\"</code> 属性的包裹元素。",
        "<strong>用户故事 #2：</strong> 在 <code>#quote-box</code> 元素内， 我能看到一个具有 <code>id=\"text\"</code> 属性的元素。",
        "<strong>用户故事 #3：</strong> 在 <code>#quote-box</code> 元素内， 我能看到一个具有 <code>id=\"author\"</code> 属性的元素。",
        "<strong>用户故事 #4：</strong> 在 <code>#quote-box</code> 元素内， 我能看到一个具有 <code>id=\"new-quote\"</code> 属性的可点击元素。",
        "<strong>用户故事 #5：</strong> 在 <code>#quote-box</code> 元素内， 我能看到一个具有 <code>id=\"tweet-quote\"</code> 属性的可点击元素。",
        "<strong>用户故事 #6：</strong> 首次加载时, 我的 App 需要在具有 <code>id=\"text\"</code> 属性的元素内展示一条随机引语。",
        "<strong>用户故事 #7：</strong> 首次加载时, 我的 App 需要在具有 <code>id=\"author\"</code> 属性的元素内展示该条随机引语的作者。",
        "<strong>用户故事 #8：</strong> 当具有 <code>#new-quote</code> 属性的按钮被点击时, 我的 App 应该得到一条新的引语并在具有 <code>#text</code> 属性的元素内展示出来。",
        "<strong>用户故事 #9：</strong> 当具有 <code>#new-quote</code> 属性的按钮被点击时, 我的 App 应该得到新引语的作者并在具有 <code>#author</code> 属性的元素内展示出来。",
        "<strong>用户故事 #10：</strong> 我可以通过点击具有 <code>#tweet-quote</code> 属性的 <code>a</code> 标签将当前展示的引语发送推特。 该 <code>a</code> 标签的 <code>href</code> 属性应该是 <code>\"twitter.com/intent/tweet\"</code> 以便成功发送",
        "<strong>用户故事 #11：</strong> 具有 <code>#quote-box</code> 属性的包裹元素应当水平剧中。 请在浏览器缩放尺寸为 100% 且页面窗口最大化时运行测试",
        "你可以 fork <a href='http://codepen.io/freeCodeCamp/pen/MJjpwO' target='_blank'>这个 CodePen pen 项目</a> 来构建你的项目。 或者你可以在任何你喜欢的环境中使用以下 CDN 链接来运行测试： <code>https://gitcdn.link/repo/freeCodeCamp/testable-projects-fcc/master/build/bundle.js</code>",
        "一旦你完成了本项目并且该项目所有测试运行通过， 请提交项目的 URL。",
        "如果你遇到了困难， 别忘了 <a href='https://forum.freecodecamp.org/t/how-to-get-help-when-you-are-stuck/19514' target='_blank'>阅读-搜索-提问</a> 三步法。"
      ],
      "tests": [],
      "isRequired": true,
      "challengeType": 3
    },
    {
      "id": "bd7157d8c242eddfaeb5bd13",
      "title": "实现一个 Markdown 预览器",
      "description": [
        "<strong>目标:</strong> 在 <a href='https://codepen.io' target='_blank'>CodePen.io</a> 上实现一个功能类似 <a href='https://codepen.io/freeCodeCamp/full/GrZVVO' target='_blank'>https://codepen.io/freeCodeCamp/full/GrZVVO</a> 的 App。",
        "实现以下 <a href='https://en.wikipedia.org/wiki/User_story' target='_blank'>用户故事</a> 并且通过所有的测试。 可以打造你自己的独特样式。",
        "使用诸如 HTML, JavaScript, CSS, Bootstrap, SASS, React, Redux, 以及 jQuery 这些技术来完成项目。 鉴于本部分内容和前端框架学习相关，你应该使用一款前端框架（比如 React）。 并不推荐使用前面没有提到的技术，否则风险自负。 我们有计划新增其他前端框架课程，比如 Angular 和 Vue，不过目前还没有这些内容。 如果在本项目中使用以上推荐技术遇到任何问题，欢迎反馈给我们。 编码愉快！",
        "<strong>用户故事 #1：</strong> 我能看到一个具有 <code>id=\"editor\"</code> 属性的 <code>textarea</code> 元素。",
        "<strong>用户故事 #2：</strong> 我能看到一个具有 <code>id=\"preview\"</code> 属性的元素。",
        "<strong>用户故事 #3：</strong> 当我在具有 <code>#editor</code> 属性的元素内输入文本时, 具有 <code>#preview</code> 属性的元素将会同时更新展示我键入的内容。",
        "<strong>用户故事 #4：</strong> 当我在具有 <code>#editor</code> 属性的元素内输入 Github 风格的 Markdown 内容时, 文本将会以 HTML 的形式按照我所键入的内容渲染于具有 <code>#preview</code> 属性的元素中 (提示: 你不需要自己解析 Markdown - 你可以引入一个叫做 Marked 的库来完成这项工作: <a href='https://cdnjs.com/libraries/marked' target='_blank'>https://cdnjs.com/libraries/marked</a>)。",
        "<strong>用户故事 #5：</strong> 当我的 Markdown 预览器首次加载时, 在具有 <code>#editor</code> 属性的元素内的默认内容应该包含以下每个种类的至少一段有效 Markdown 代码： 标题(H1 标签大小), 次级标题 (H2 标签大小), 链接, 行间代码, 代码块, 列表, 引用块, 图片, 以及加粗文本。",
        "<strong>用户故事 #6：</strong> 当我的 Markdown 预览器首次加载时, 在具有 <code>#editor</code> 属性的元素内的默认内容应该以 HTML 的形式渲染于具有 <code>#preview</code> 属性的元素中。",
        "<strong>可选奖励 (你无需通过这项测试)：</strong> 当我点击一个由我的 Markdown 预览器渲染的链接时, 该链接会在一个新的标签页中打开 (提示: 阅读 Marked.js 的文档来获取答案！).",
        "<strong>可选奖励 (你无需通过这项测试)：</strong> 我的 Markdown 预览器能够解析回车符并且将他们以 <code>br</code> (换行) 元素的形式渲染出来。",
        "你可以 fork <a href='http://codepen.io/freeCodeCamp/pen/MJjpwO' target='_blank'>这个 CodePen pen 项目</a> 来构建你的项目。 或者你可以在任何你喜欢的环境中使用以下 CDN 链接来运行测试： <code>https://gitcdn.link/repo/freeCodeCamp/testable-projects-fcc/master/build/bundle.js</code>",
        "一旦你完成了本项目并且该项目所有测试运行通过， 请提交项目的 URL。",
        "如果你遇到了困难， 别忘了 <a href='https://forum.freecodecamp.org/t/how-to-get-help-when-you-are-stuck/19514' target='_blank'>阅读-搜索-提问</a> 三步法。"
      ],
      "releasedOn": "January 10, 2017",
      "tests": [],
      "isRequired": true,
      "challengeType": 3
    },
    {
      "id": "587d7dbc367417b2b2512bae",
      "title": "实现一个打鼓器",
      "description": [
        "<strong>目标:</strong> 在 <a href='https://codepen.io' target='_blank'>CodePen.io</a> 上实现一个功能类似 <a href='https://codepen.io/freeCodeCamp/full/MJyNMd' target='_blank'>https://codepen.io/freeCodeCamp/full/MJyNMd</a> 的 App。",
        "实现以下 <a href='https://en.wikipedia.org/wiki/User_story' target='_blank'>用户故事</a> 并且通过所有的测试。 可以打造你自己的独特样式。",
        "使用诸如 HTML, JavaScript, CSS, Bootstrap, SASS, React, Redux, 以及 jQuery 这些技术来完成项目。 鉴于本部分内容和前端框架学习相关，你应该使用一款前端框架（比如 React）。并不推荐使用前面没有提到的技术，否则风险自负。 我们有计划新增其他前端框架课程，比如 Angular 和 Vue，不过目前还没有这些内容。 如果在本项目中使用以上推荐技术遇到任何问题，欢迎反馈给我们。 编码愉快！",
        "<strong>用户故事 #1：</strong> 我应该可以看到一个包含了其他所有元素的具有 <code>id=\"drum-machine\"</code> 属性的外层容器。",
        "<strong>用户故事 #2：</strong> 在具有 <code>#drum-machine</code> 属性的元素内，我能看到一个具有 <code>id=\"display\"</code> 属性的元素。",
        "<strong>用户故事 #3：</strong> 在具有 <code>#drum-machine</code> 属性的元素内， 我能看到9个可以点击的鼓垫元素, 每个鼓垫元素都有一个值为 <code>drum-pad</code> 的 class 属性，一个用于描述触发鼓垫剪辑音频的特殊 id，以及以下键值之一的文本内容: Q, W, E, A, S, D, Z, X, C. 这些鼓垫必须按照以上顺序排列。",
        "<strong>用户故事 #4：</strong> 在每一个具有 <code>.drum-pad</code> 属性的元素内, 应该有一个具有指向剪辑音频地址的 <code>src</code> 属性的 HTML5 <code>audio</code> 元素，一个值为 <code>clip</code> 的 class 属性，以及一个 id 属性，值是其父元素 <code>.drum-pad</code> 的文本内容 (例如 <code>id=\"Q\"</code>, <code>id=\"W\"</code>, <code>id=\"E\"</code> 等等)。",
        "<strong>用户故事 #5：</strong> 当我点击一个具有 <code>.drum-pad</code> 属性的元素时，应该触发它的子元素 <code>audio</code> 包含的剪辑音频。",
        "<strong>用户故事 #6：</strong> 当我按下每一个 <code>.drum-pad</code> 元素的关联键时，应该触发其子元素 <code>audio</code> 包含的剪辑音频 (例如：按下 Q 键应该触发包含字符串 \"Q\" 的鼓垫，按下 W 键应该触发包含字符串 \"W\" 的鼓垫等等)。",
        "<strong>用户故事 #7：</strong> 当一个具有 <code>.drum-pad</code> 属性的元素被触发时，a string describing the associated audio clip is displayed as the inner text of the <code>#display</code> element (每一个字符串都应该是独一无二的)。",
        "<strong>用户故事 #7：</strong> 当一个具有 <code>.drum-pad</code> 属性的元素被触发时，a string describing the associated audio clip is displayed as the inner text of the <code>#display</code> element (每一个字符串都应该是独一无二的)。",
        "你可以 fork <a href='http://codepen.io/freeCodeCamp/pen/MJjpwO' target='_blank'>这个 CodePen pen 项目</a> 来构建你的项目。 或者你可以在任何你喜欢的环境中使用以下 CDN 链接来运行测试： <code>https://gitcdn.link/repo/freeCodeCamp/testable-projects-fcc/master/build/bundle.js</code>",
        "一旦你完成了本项目并且该项目所有测试运行通过， 请提交项目的 URL。",
        "如果你遇到了困难， 别忘了 <a href='https://forum.freecodecamp.org/t/how-to-get-help-when-you-are-stuck/19514' target='_blank'>阅读-搜索-提问</a> 三步法。"
      ],
      "releasedOn": "February 17, 2017",
      "tests": [],
      "isRequired": true,
      "challengeType": 3
    },
    {
      "id": "bd7158d8c442eddfaeb5bd17",
      "title": "Build a JavaScript Calculator",
      "description": [
        "<strong>Objective:</strong> Build a <a href='https://codepen.io' target='_blank'>CodePen.io</a> app that is functionally similar to this: <a href='https://codepen.io/freeCodeCamp/full/wgGVVX' target='_blank'>https://codepen.io/freeCodeCamp/full/wgGVVX</a>.",
        "Fulfill the below <a href='https://en.wikipedia.org/wiki/User_story' target='_blank'>user stories</a> and get all of the tests to pass. Give it your own personal style.",
        "You can use any mix of HTML, JavaScript, CSS, Bootstrap, SASS, React, Redux, and jQuery to complete this project. You should use a frontend framework (like React for example) because this section is about learning frontend frameworks. Additional technologies not listed above are not recommended and using them is at your own risk. We are looking at supporting other frontend frameworks like Angular and Vue, but they are not currently supported. We will accept and try to fix all issue reports that use the suggested technology stack for this project. Happy coding!",
        "<strong>User Story #1:</strong> My calculator should contain a clickable element containing an <code>=</code> (equal sign) with a corresponding <code>id=\"equals\"</code>.",
        "<strong>User Story #2:</strong> My calculator should contain 10 clickable elements containing one number each from 0-9, with the following corresponding IDs: <code>id=\"zero\"</code>, <code>id=\"one\"</code>, <code>id=\"two\"</code>, <code>id=\"three\"</code>, <code>id=\"four\"</code>, <code>id=\"five\"</code>, <code>id=\"six\"</code>, <code>id=\"seven\"</code>, <code>id=\"eight\"</code>, and <code>id=\"nine\"</code>.",
        "<strong>User Story #3:</strong> My calculator should contain 4 clickable elements each containing one of the 4 primary mathematical operators with the following corresponding IDs: <code>id=\"add\"</code>, <code>id=\"subtract\"</code>, <code>id=\"multiply\"</code>, <code>id=\"divide\"</code>.",
        "<strong>User Story #4:</strong> My calculator should contain a clickable element containing a <code>.</code> (decimal point) symbol with a corresponding <code>id=\"decimal\"</code>.",
        "<strong>User Story #5:</strong> My calculator should contain a clickable element with an <code>id=\"clear\"</code>.",
        "<strong>User Story #6:</strong> My calculator should contain an element to display values with a corresponding <code>id=\"display\"</code>.",
        "<strong>User Story #7:</strong> At any time, pressing the clear button clears the input and output values, and returns the calculator to its initialized state; 0 should be shown in the element with the id of <code>display</code>.",
        "<strong>User Story #8:</strong> As I input numbers, I should be able to see my input in the element with the id of <code>display</code>.",
        "<strong>User Story #9:</strong> In any order, I should be able to add, subtract, multiply and divide a chain of numbers of any length, and when I hit <code>=</code>, the correct result should be shown in the element with the id of <code>display</code>.",
        "<strong>User Story #10:</strong> When inputting numbers, my calculator should not allow a number to begin with multiple zeros.",
        "<strong>User Story #11:</strong> When the decimal element is clicked, a <code>.</code> should append to the currently displayed value; two <code>.</code> in one number should not be accepted.",
        "<strong>User Story #12:</strong> I should be able to perform any operation (+, -, *, /) on numbers containing decimal points.",
        "<strong>User Story #13:</strong> If 2 or more operators are entered consecutively, the operation performed should be the last operator entered.",
        "<strong>User Story #14:</strong> Pressing an operator immediately following <code>=</code> should start a new calculation that operates on the result of the previous evaluation.",
        "<strong>User Story #15:</strong> My calculator should have several decimal places of precision when it comes to rounding (note that there is no exact standard, but you should be able to handle calculations like <code>2 / 7</code> with reasonable precision to at least 4 decimal places).",
        "<strong>Note On Calculator Logic:</strong> It should be noted that there are two main schools of thought on calculator input logic: <dfn>immediate execution logic</dfn> and <dfn>formula logic</dfn>. Our example utilizes formula logic and observes order of operation precedence, immediate execution does not. Either is acceptable, but please note that depending on which you choose, your calculator may yield different results than ours for certain equations (see below example). As long as your math can be verified by another production calculator, please do not consider this a bug.",
        "<strong>EXAMPLE:</strong> <code>3 + 5 x 6 - 2 / 4 =</code><br><ul><li><strong>Immediate Execution Logic:</strong> <code>11.5</code></li><li><strong>Formula/Expression Logic:</strong> <code>32.5</code></li></ul>",
        "You can build your project by forking <a href='http://codepen.io/freeCodeCamp/pen/MJjpwO' target='_blank'>this CodePen pen</a>. Or you can use this CDN link to run the tests in any environment you like: <code>https://gitcdn.link/repo/freeCodeCamp/testable-projects-fcc/master/build/bundle.js</code>",
        "Once you're done, submit the URL to your working project with all its tests passing.",
        "Remember to use the <a href='https://forum.freecodecamp.org/t/how-to-get-help-when-you-are-stuck/19514' target='_blank'>Read-Search-Ask</a> method if you get stuck."
      ],
      "tests": [],
      "challengeType": 3,
      "isRequired": true
    },
    {
      "id": "bd7158d8c442eddfaeb5bd0f",
      "title": "Build a Pomodoro Clock",
      "description": [
        "<strong>Objective:</strong> Build a <a href='https://codepen.io' target='_blank'>CodePen.io</a> app that is functionally similar to this: <a href='https://codepen.io/freeCodeCamp/full/XpKrrW' target='_blank'>https://codepen.io/freeCodeCamp/full/XpKrrW</a>.",
        "Fulfill the below <a href='https://en.wikipedia.org/wiki/User_story' target='_blank'>user stories</a> and get all of the tests to pass. Give it your own personal style.",
        "You can use any mix of HTML, JavaScript, CSS, Bootstrap, SASS, React, Redux, and jQuery to complete this project. You should use a frontend framework (like React for example) because this section is about learning frontend frameworks. Additional technologies not listed above are not recommended and using them is at your own risk. We are looking at supporting other frontend frameworks like Angular and Vue, but they are not currently supported. We will accept and try to fix all issue reports that use the suggested technology stack for this project. Happy coding!",
        "<strong>User Story #1:</strong> I can see an element with <code>id=\"break-label\"</code> that contains a string (e.g. \"Break Length\").",
        "<strong>User Story #2:</strong> I can see an element with <code>id=\"session-label\"</code> that contains a string (e.g. \"Session Length\").",
        "<strong>User Story #3:</strong> I can see two clickable elements with corresponding IDs: <code>id=\"break-decrement\"</code> and <code>id=\"session-decrement\"</code>.",
        "<strong>User Story #4:</strong> I can see two clickable elements with corresponding IDs: <code>id=\"break-increment\"</code> and <code>id=\"session-increment\"</code>.",
        "<strong>User Story #5:</strong> I can see an element with a corresponding <code>id=\"break-length\"</code>, which by default (on load) displays a value of 5.",
        "<strong>User Story #6:</strong> I can see an element with a corresponding <code>id=\"session-length\"</code>, which by default displays a value of 25.",
        "<strong>User Story #7:</strong> I can see an element with a corresponding <code>id=\"timer-label\"</code>, that contains a string indicating a session is initialized (e.g. \"Session\").",
        "<strong>User Story #8:</strong> I can see an element with corresponding <code>id=\"time-left\"</code>. NOTE: Paused or running, the value in this field should always be displayed in <code>mm:ss</code> format (i.e. 25:00).",
        "<strong>User Story #9:</strong> I can see a clickable element with a corresponding <code>id=\"start_stop\"</code>.",
        "<strong>User Story #10:</strong> I can see a clickable element with a corresponding <code>id=\"reset\"</code>.",
        "<strong>User Story #11:</strong> When I click the element with the id of <code>reset</code>, any running timer should be stopped, the value within <code>id=\"break-length\"</code> should return to <code>5</code>, the value within <code>id=\"session-length\"</code> should return to 25, and the element with <code>id=\"time-left\"</code> should reset to it's default state.",
        "<strong>User Story #12:</strong> When I click the element with the id of <code>break-decrement</code>, the value within <code>id=\"break-length\"</code> decrements by a value of 1, and I can see the updated value.",
        "<strong>User Story #13:</strong> When I click the element with the id of <code>break-increment</code>, the value within <code>id=\"break-length\"</code> increments by a value of 1, and I can see the updated value.",
        "<strong>User Story #14:</strong> When I click the element with the id of <code>session-decrement</code>, the value within <code>id=\"session-length\"</code> decrements by a value of 1, and I can see the updated value.",
        "<strong>User Story #15:</strong> When I click the element with the id of <code>session-increment</code>, the value within <code>id=\"session-length\"</code> increments by a value of 1, and I can see the updated value.",
        "<strong>User Story #16:</strong> I should not be able to set a session or break length to <= 0.",
        "<strong>User Story #17:</strong> I should not be able to set a session or break length to > 60.",
        "<strong>User Story #18:</strong> When I first click the element with <code>id=\"start_stop\"</code>, the timer should begin running from the value currently displayed in <code>id=\"session-length\"</code>, even if the value has been incremented or decremented from the original value of 25.",
        "<strong>User Story #19:</strong> If the timer is running, the element with the id of <code>time-left</code> should display the remaining time in <code>mm:ss</code> format (decrementing by a value of 1 and updating the display every 1000ms).",
        "<strong>User Story #20:</strong> If the timer is running and I click the element with <code>id=\"start_stop\"</code>, the countdown should pause.",
        "<strong>User Story #21:</strong> If the timer is paused and I click the element with <code>id=\"start_stop\"</code>, the countdown should resume running from the point at which it was paused.",
        "<strong>User Story #22:</strong> When a session countdown reaches zero (NOTE: timer MUST reach 00:00), and a new countdown begins, the element with the id of <code>timer-label</code> should display a string indicating a break has begun.",
        "<strong>User Story #23:</strong> When a session countdown reaches zero (NOTE: timer MUST reach 00:00), a new break countdown should begin, counting down from the value currently displayed in the <code>id=\"break-length\"</code> element.",
        "<strong>User Story #24:</strong> When a break countdown reaches zero (NOTE: timer MUST reach 00:00), and a new countdown begins, the element with the id of <code>timer-label</code> should display a string indicating a session has begun.",
        "<strong>User Story #25:</strong> When a break countdown reaches zero (NOTE: timer MUST reach 00:00), a new session countdown should begin, counting down from the value currently displayed in the <code>id=\"session-length\"</code> element.",
        "<strong>User Story #26:</strong> When a countdown reaches zero (NOTE: timer MUST reach 00:00), a sound indicating that time is up should play. This should utilize an HTML5 <code>audio</code> tag and have a corresponding <code>id=\"beep\"</code>.",
        "<strong>User Story #27:</strong> The audio element with <code>id=\"beep\"</code> must be 1 second or longer.",
        "<strong>User Story #28:</strong> The audio element with id of <code>beep</code> must stop playing and be rewound to the beginning when the element with the id of <code>reset</code> is clicked.",
        "You can build your project by forking <a href='http://codepen.io/freeCodeCamp/pen/MJjpwO' target='_blank'>this CodePen pen</a>. Or you can use this CDN link to run the tests in any environment you like: <code>https://gitcdn.link/repo/freeCodeCamp/testable-projects-fcc/master/build/bundle.js</code>",
        "Once you're done, submit the URL to your working project with all its tests passing.",
        "Remember to use the <a href='https://forum.freecodecamp.org/t/how-to-get-help-when-you-are-stuck/19514' target='_blank'>Read-Search-Ask</a> method if you get stuck."
      ],
      "tests": [],
      "isRequired": true,
      "challengeType": 3
    }
  ]
}